---
published: false
layout: post
title: Marketcetera 1.5 on Ubuntu 10.10
categories:
- other
---

"Marketcetera":http://www.marketcetera.org/ is an Eclipse-based trading system.

Here are some notes on installing 1.5 from source. Installation was on a brand new Ubuntu 10.10 Virtual Machine. According to the Marketcetera website, version 2.1 of their software will be released soon. For now though, these instructions should help someone get started with Marketcetera.

Most of these instructions are pieced together from these sources:

* "Official Build Instructions":http://www.marketcetera.org/confluence/display/MDN/Building+Marketcetera+Platform
* "Official Photon Build":http://www.marketcetera.org/confluence/display/MDN/Building+Photon
* "Installing Marketcetera on Mac OSX":http://metc.jottit.com/

h1. Java Install

h2. Enable Partner Repository

* Open Synaptic Package Manager
** ( System > Administration > Synaptic Package Manager )
* Open Settings > Repositories
* Select "Other Software" Tab
* Checkmark "Canonical Partners"
* close
* Press Reload button 

h2. Install Java JDK

* In Synaptic Package Manager
* Use quick search at top to search for "java6-jdk"
* Should find "sun-java6-jdk"
* Right click and select "Mark for Installation"
* Select "Mark" in the additional required changes window that pops up.
* Select "Apply" and then "Apply" again on resulting pop-up window.
* This will download required packages.
* After download, you must accept the licensee agreement before installation begins

h2. Modify Path

* We want to use this sun jdk by default. 
* Edit ~/.bashrc 

<pre class="terminal"><code>gedit ~/.bashrc</code></pre>

* Add code to export JAVA_HOME

{% highlight bash %}
export JAVA_HOME="/opt/jdk1.6.0_11"
export MAVEN_OPTS="-Xmx512m -Xms128m -XX:MaxPermSize=512m"
export PATH=${JAVA_HOME}/bin:${PATH}
{% endhighlight %}

* Close Terminal and re-open it

h2. Verify Install

* Close Synaptic Package Manager
* Open Terminal
* Type:

<pre class="terminal"><code>java -version</code></pre>

* Output on my machine:

Java(TM) SE Runtime Environment (build 1.6.0_22-b04)
Java HotSpot(TM) Client VM (build 17.1-b03, mixed mode, sharing)

h1. Maven Install

h2. Install Old Version of Maven

* Marketcetera will not run with the latest version of Maven, so apt-get cannot be used. 

* Download Maven version 2.0.9 from "The Maven Repo":http://archive.apache.org/dist/maven/binaries/ 

* Extract tar file 

<pre class="terminal"><code>tar -xzvf apache-maven-2.0.9-bin.tar.gz</code></pre>

* Add the bin directory of this maven install to your PATH.
* In my case, I moved the maven directory to ~/maven and added ~/maven/bin to my PATH. So my .bashrc file looks like this:

{% highlight bash %}
export JAVA_HOME="/opt/jdk1.6.0_11"
export MAVEN_OPTS="-Xmx512m -Xms128m -XX:MaxPermSize=512m"
export MAVEN_HOME="/home/user_name/maven"
export PATH=${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${PATH}
{% endhighlight %}

h2. Verify Install

* In Terminal, run:

<pre class="terminal"><code>mvn -v</code></pre>

* Output on my machine:

<pre class="terminal"><code>Apache Maven 2.0.9
Java version 1.6.0_22</code></pre>

h1. Install Subversion

* In Terminal, run:

<pre class="terminal"><code>sudo apt-get install subversion</code></pre>

h1. Install MySQL

h2. Install Server

* In Terminal, run:

<pre class="terminal"><code>sudo apt-get install mysql-client mysql-server</code></pre>

* type Y to install associated packages
* Once download is complete, a package configuration wizard starts
* type a root password for mysql and press enter
* you might have to enter this password multiple times

h2. Configure Server

* edit /etc/mysql/my.cnf by running:

<pre class="terminal"><code>sudo gedit /etc/mysql/my.cnf</code></pre>

* In the [mysqld] section, add the following to the bottom of the section:

{% highlight bash %}
default-character-set = utf8
lc-time-names = en_US
default-time-zone = +0:00
collation_server = utf8_general_ci
default-storage-engine = INNODB
{% endhighlight %}

* Restart the mysql server:

<pre class="terminal"><code>sudo restart mysql</code></pre>

h2. Setup Marketcetera database

* connect to mysql server:

<pre class="terminal"><code>mysql -u root</code></pre>

* create database:

{% highlight sql %}
CREATE DATABASE marketcetera;
{% endhighlight %}

* create user:

{% highlight sql %}
create user marketcetera identified by 'marketcetera';
grant all on marketcetera.* to 'marketcetera';
CREATE USER 'marketcetera'@'localhost' IDENTIFIED BY 'marketcetera';
GRANT ALL PRIVILEGES ON marketcetera.* TO 'marketcetera'@'localhost';
{% endhighlight %}

* exit mysql server

{% highlight sql %}
exit
{% endhighlight %}

h1. Install Eclipse

h2. Download Eclipse version 3.4 (Ganymede)

* Marketcetera 1.5 doesn't work with current versions of Eclipse. 
* I couldn't get Eclipse 3.4.1 to download, but did have success with 3.4
* We want to download the Eclipse IDE for Java EE Developers version 3.4.
* Link to this version of Eclipse is "found here":http://www.eclipse.org/downloads/packages/release/ganymede/r
* "Direct Download link for 32-bit version of Linux":http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/ganymede/R/eclipse-jee-ganymede-SR1-linux-gtk.tar.gz tar
* wget can be used to download this file

<pre class="terminal"><code>cd ~/Downloads
wget http://www.eclipse.org/downloads/download.php? \
    file=/technology/epp/downloads/release/ganymede/R/eclipse-jee-ganymede-SR1-linux-gtk.tar.gz</code></pre>


* Or in a browser, select Save file and allow tar.gz to download. Using Firefox, this is downloaded to the ~/Downloads directory

* extract tar.gz

<pre class="terminal"><code>cd ~/Downloads
tar -xzvf eclipse-jee-ganymede-linux-gtk.tar.gz
mv ./eclipse  ../</code></pre>

* now Eclipse is installed at ~/eclipse

h1. Download Marketcetera sourcecode

* create directory to checkout code to

<pre class="terminal"><code>mkdir ~/marketcetera_workspace
cd ~/marketcetera_workspace</code></pre>

* download code using subversion 

<pre class="terminal"><code>svn co http://code.marketcetera.org/root/tags/1.5.0 marketcetera-platform</code></pre>

h1. Build Marketcetera

h2. Setup profile

* copy sample profile to profile.xml

<pre class="terminal"><code>cd marketcetera-platform
cp profiles.xml.sample profiles.xml</code></pre>

* Determine perl path

<pre class="terminal"><code>which perl</code></pre>

* My output:

<pre class="terminal"><code>/usr/bin/perl</code></pre>

* edit profile.xml:

<pre class="terminal"><code>gedit profile.xml</code></pre>

* Set mvn.perl.path to 

<pre class="terminal"><code>/usr/bin/perl</code></pre>

* set mvn.photon.target to full path where photon should be built. In our case, it is something like:

<pre class="terminal"><code>/home/user_name/marketcetera_workspace/marketcetera-platform/source/photon-target</code></pre>

Where "user_name" is your username

h2. Build with Maven

* edit uberPom.xml in marketcetera-platform directory

<pre class="terminal"><code>gedit uberPom.xml</code></pre>

* Around line 537, remove the square brackets from around the ant-junit version number so that it goes from:

{% highlight xml %}
 <vesion>[1.7.1]</version>
{% endhighlight %}
  
to

{% highlight xml %}
<vesion>1.7.1</version>
{% endhighlight %}


* Run from the marketcetera-platform directory:

<pre class="terminal"><code>mvn -f uberPom.xml install
mvn -DskipTests=true install</code></pre>

h2. Generate Eclipse metadata

* From the marketcetera-platform directory

<pre class="terminal"><code>cd source
mvn eclipse:clean eclipse:eclipse</code></pre>

h1. Setup Eclipse

h2. Edit eclipse.ini

* For some reason, Eclipse was not starting correctly for me. It would open and then a blank error message would pop up. I found a solution by editing eclipse.ini file

<pre class="terminal"><code>gedit ~/eclipse/eclipse.ini</code></pre>

* Add this line to the bottom of the ini file:

<pre class="terminal"><code>-Dorg.eclipse.swt.browser.XULRunnerPath=/dev/null</code></pre>

h2. Start Eclipse

* Start Eclipse

<pre class="terminal"><code>cd ~/eclipse
./eclipse</code></pre>

* Set workspace to 

<pre class="terminal"><code>~/marketcetera_workspace</code></pre>

* close welcome screen if it shows up

h2. Add maven classpath variable

* Navigate Window > Preferences > Java > Build Path > Classpath Variables
* Press New button
* For Name, enter:

<pre class="terminal"><code>M2_REPO</code></pre>

* For Path, enter:

<pre class="terminal"><code>/home/user_name/.m2/repository</code></pre>

Where user_name is your user name.

h2. Set Photon Target Directory

* In Preferences window, open Plugin Development > Target Platform
 For Location at the top of the window, select "Browse" and navigate to a sub-directory of the photo target directory used in configuring the marketcetera build:

<pre class="terminal"><code>/home/user_name/marketcetera_workspace/marketcetera-platform/source/photon-target/eclipse</code></pre>

* Press "reload" to reload the target platform

h2. String Substitution

* In Preferences window, open Run/Debug > String substitution
* Select New
* For Name, use:

<pre class="terminal"><code>maven_exec</code></pre>

* For value use the path to your custom install of maven. From above, this would be something like:

<pre class="terminal"><code>/home/user_name/maven/bin</code></pre>

h1. Build

h2. Import projects

* Right click on Eclipse's explorer and select Import > Import 
* Select General > Existing Projects into workspace
* Select the ~/marketcetera_-_workspace/marketcetera-platform directory
* Import all projects
* Once import is complete, select all projects, right click and select "Refresh"

h2. Clean and build

* Select Project > Clean...
* Default parameters in the next window should clean and then build all Marketcetera projects

Hopefully this gets you started in the wonderful world of automated stock trading!


